<?php

namespace App\Repository;

use Doctrine\ORM\EntityRepository;
use App\Entity\DocumentSignature;
use App\Model\Envelope;
use App\Repository\SignableObjectRepositoryInterface;

/**
 * BankInformationRepository.
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class BankInformationRepository extends EntityRepository implements SignableObjectRepositoryInterface
{
    /**
     * Is object has completed document signature for application.
     *
     * @param int $applicationId
     *
     * @return bool
     */
    public function isApplicationSigned($applicationId)
    {
        $sql = 'SELECT count(ds.id) FROM document_signatures ds
                LEFT JOIN bank_information bi ON (ds.source_id = bi.id AND ds.type = :type)
                LEFT JOIN client_accounts ca ON (bi.client_id = ca.client_id)
                WHERE ds.status != :status_signed AND ds.status != :status_completed AND
                (ca.id = :application_id OR ca.consolidator_id = :application_id)';

        $stmt = $this->_em->getConnection()->prepare($sql);
        $stmt->bindValue('type', DocumentSignature::TYPE_BANK_INFORMATION);
        $stmt->bindValue('application_id', $applicationId);
        $stmt->bindValue('status_signed', Envelope::STATUS_SIGNED);
        $stmt->bindValue('status_completed', Envelope::STATUS_COMPLETED);

        $stmt->execute();

        return !((bool) $stmt->fetchColumn());
    }
}
