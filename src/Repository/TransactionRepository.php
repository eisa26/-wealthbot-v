<?php

namespace App\Repository;

use Doctrine\ORM\EntityRepository;

/**
 * TransactionRepository.
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class TransactionRepository extends EntityRepository
{
    public function findByClientIdAndAccountId($client_id, $sort = 'transactions.txDate', $direction = 'DESC', $account_id = null)
    {
        $qb = $this->createQueryBuilder('transactions')
            ->leftJoin('transactions.account', 'system_accounts')
            ->leftJoin('transactions.security', 'securities')
            ->leftJoin('transactions.transactionType', 'transaction_types')

            ->where('system_accounts.client_id = :client_id')
            ->setParameter('client_id', $client_id)

            ->orderBy($sort, $direction)
        ;

        if ($account_id) {
            $qb
                ->andWhere('system_accounts.client_account_id = :account_id')
                ->setParameter('account_id', $account_id);
        }

        return $qb->getQuery()->execute();
    }

    public function getContributionsByPeriod($startDate, $endDate, $account = false)
    {
        $qb = $this->createQueryBuilder('transactions');

        $qb
            ->join('transactions.transactionType', 'transaction_type')
            ->where($qb->expr()->between('transactions.txDate', ':startDate', ':endDate'))
            ->andWhere($qb->expr()->in('transaction_type.name', ['DEP', 'CJOUR', 'REC']))
            ->setParameter('startDate', $startDate)
            ->setParameter('endDate', $endDate)
        ;

        if ($account) {
            $qb->andWhere('transactions.account = :account')
                ->setParameter('account', $account)
            ;
        }

        return $qb->getQuery()->execute();
    }

    public function getDistributionsByPeriod($startDate, $endDate, $account = false)
    {
        $qb = $this->createQueryBuilder('transactions');

        $qb
            ->join('transactions.transactionType', 'transaction_type')
            ->where($qb->expr()->between('transactions.txDate', ':startDate', ':endDate'))
            ->andWhere($qb->expr()->in('transaction_type.name', ['WITH', 'DJOUR', 'MFEE', 'DEL']))
            ->setParameter('startDate', $startDate)
            ->setParameter('endDate', $endDate)
        ;

        if ($account) {
            $qb->andWhere('transactions.account = :account')
                ->setParameter('account', $account)
            ;
        }

        return $qb->getQuery()->execute();
    }
}
